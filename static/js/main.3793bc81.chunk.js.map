{"version":3,"sources":["api/api.js","redux/users-reducer.js","image/preloader.svg","components/Preloader.js","components/FirstPage.jsx","components/SecondPage.jsx","App.js","redux/store.js","index.js"],"names":["instance","axios","baseURL","userAPI","page","get","then","response","data","SET_USERS","CLEAN_STATE","TOGGLE_IS_FETCHING","initialState","users","isFetching","toggleIsFetching","type","usersReducer","state","action","Preloader","props","src","preloader","alt","FirstPage","getUsers","emptyState","className","onClick","to","User","user","avatar","first_name","last_name","email","SecondPage","map","u","id","App","exact","path","render","React","Component","connect","dispatch","a","Math","floor","random","getRandomInt","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3793bc81.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/'\r\n})\r\n\r\nexport const userAPI = {\r\n\r\n    getUsers(page) {\r\n        return instance.get(`api/users?page=${page}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n","import {userAPI} from \"../api/api\";\r\n\r\nconst SET_USERS = 'SET_USERS'\r\nconst CLEAN_STATE = 'CLEAN_STATE'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    isFetching: false\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case CLEAN_STATE:\r\n            return {\r\n                ...state,\r\n                users: []\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const cleanState = () => ({type: CLEAN_STATE})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\n\r\nexport const getUsers = () => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        const getRandomInt = () => {\r\n            return Math.floor(Math.random() * 2 + 1);\r\n        }\r\n        const page = getRandomInt()\r\n        const data = await userAPI.getUsers(page)\r\n        dispatch(setUsers(data))\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const emptyState = () => (dispatch) => {\r\n    dispatch(cleanState())\r\n}\r\n\r\nexport default usersReducer\r\n","export default __webpack_public_path__ + \"static/media/preloader.5788b05c.svg\";","import React from 'react';\r\nimport preloader from \"../image/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} alt={'Loading'}/>\r\n           </div>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport '../App.css'\r\nimport Preloader from \"./Preloader\";\r\n\r\nfunction getRandomInt() {\r\n    return Math.floor(Math.random() * 2 + 1);\r\n}\r\n\r\n\r\n\r\nconst FirstPage = ({getUsers, emptyState, isFetching}) => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            { isFetching ? <Preloader /> : null }\r\n            <button className={'btn-new'} onClick={getUsers}>Сделать запрос на сервер</button>\r\n            <button className={'btn-new'} onClick={emptyState}>Очистить State</button>\r\n            <button className={'btn-new'}>\r\n                <NavLink to={'/second-page'} >Перейти на вторую страницу</NavLink>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstPage\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\n\r\nconst User = ({user}) => {\r\n\r\n    return (\r\n        <div className={'user'}>\r\n            <img src={user.avatar} alt=\"\"/>\r\n            <div className={'user-info'}>\r\n            <div> Имя: {user.first_name}</div>\r\n            <div> Фамилия: {user.last_name}</div>\r\n            <div> e-mail: {user.email}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst SecondPage = ({users}) => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n                <div className={'container'}>\r\n                    { users.users.data\r\n                        ? users.users.data.map(u => <User key={u.id} user={u}/>)\r\n                        : <div className={'text'}>Для отображения пользователей сделайте запрос на сервер на первой странице.</div>\r\n                    }\r\n                </div>\r\n\r\n            <button className={'btn-new'}>\r\n                <NavLink to={'/'}>Вернуться на первую страницу</NavLink>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondPage\r\n","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {emptyState, getUsers} from \"./redux/users-reducer\";\nimport FirstPage from \"./components/FirstPage\";\nimport {Route} from \"react-router\";\nimport SecondPage from \"./components/SecondPage\";\n\n\nclass App extends React.Component {\n\n\n    render() {\n\n        return (\n            <div>\n                <Route exact path={'/'}\n                       render={() => <FirstPage getUsers={this.props.getUsers}\n                                                emptyState={this.props.emptyState}\n                                                isFetching={this.props.isFetching}/>}/>\n                <Route path={'/second-page'}\n                       render={() => <SecondPage users={this.props.users}/>}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.users,\n    isFetching: state.users.isFetching\n})\n\n\nexport default connect(mapStateToProps, {getUsers, emptyState})(App);\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nlet reducers = combineReducers({\r\n    users: usersReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}